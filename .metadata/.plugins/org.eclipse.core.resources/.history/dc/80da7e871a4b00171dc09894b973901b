package sorting;
class q{
	int partition(int[] A,int start,int end){
		int pindex=start;
		int pivot=A[end];
		for(int i=0;i<=A.length-1;i++){
			if(A[i]>pivot){
			int x=A[i];
			int y=A[end-1];
			A[end-1]=x;
			A[i]=y;
			end--;
			}
				int x=A[end+1];
				
				int y=A[A.length-1];
				A[end+1]=x;
				A[A.length-1]=y;	
		
		}
	return A[end+1];}
	void qe(int[] A,int start,int end){
	if(start<end){
int pindex= partition(A,start,end);
	qe(A,start,pindex-1);
	qe(A,pindex+1,end);}
	
	}
}
public class quick {

	public static void main(String[] args) {
		int[] A=new int[]{5,2,6,1,10,9,7,11,4};
q m=new q();
m.qe(A,0,8);
for(int k:A)
{
	System.out.println(k);
}
	}

}
